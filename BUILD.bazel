load("@rules_cc//cc:defs.bzl", "cc_binary", "cc_library", "cc_test")

cc_binary(
    name = "uniq",
    srcs = ["uniq_main.cc"],
    deps = [
        ":get_unique",
        "@abseil-cpp//absl/flags:parse",
    ],
)

cc_library(
    name = "get_unique",
    srcs = ["get_unique.cc"],
    hdrs = ["get_unique.h"],
    deps = [
        "@abseil-cpp//absl/strings",
    ],
)

cc_test(
    name = "get_unique_test",
    size = "small",
    srcs = ["get_unique_test.cc"],
    deps = [
        ":get_unique",
        "@googletest//:gtest",
        "@googletest//:gtest_main",
    ],
)

sh_test(
    name = "uniq_integration_test",
    size = "small",
    srcs = ["uniq_integration_test.sh"],
    args = [
        "$(location :uniq)",
    ],
    data = [
        "testdata/expected_count_output.txt",
        "testdata/expected_output.txt",
        "testdata/expected_repeated_only_output.txt",
        "testdata/test.txt",
        ":uniq",
    ],
)
